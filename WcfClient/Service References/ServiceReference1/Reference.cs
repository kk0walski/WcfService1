//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Auction", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class Auction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FinishedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WcfClient.ServiceReference1.Offer[] OffertsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double StartPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Finished {
            get {
                return this.FinishedField;
            }
            set {
                if ((this.FinishedField.Equals(value) != true)) {
                    this.FinishedField = value;
                    this.RaisePropertyChanged("Finished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WcfClient.ServiceReference1.Offer[] Offerts {
            get {
                return this.OffertsField;
            }
            set {
                if ((object.ReferenceEquals(this.OffertsField, value) != true)) {
                    this.OffertsField = value;
                    this.RaisePropertyChanged("Offerts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double StartPrice {
            get {
                return this.StartPriceField;
            }
            set {
                if ((this.StartPriceField.Equals(value) != true)) {
                    this.StartPriceField = value;
                    this.RaisePropertyChanged("StartPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Offer", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class Offer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AuctionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OfferIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Auction {
            get {
                return this.AuctionField;
            }
            set {
                if ((this.AuctionField.Equals(value) != true)) {
                    this.AuctionField = value;
                    this.RaisePropertyChanged("Auction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OfferId {
            get {
                return this.OfferIdField;
            }
            set {
                if ((this.OfferIdField.Equals(value) != true)) {
                    this.OfferIdField = value;
                    this.RaisePropertyChanged("OfferId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAll", ReplyAction="http://tempuri.org/IService1/getAllResponse")]
        WcfClient.ServiceReference1.Auction[] getAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAll", ReplyAction="http://tempuri.org/IService1/getAllResponse")]
        System.Threading.Tasks.Task<WcfClient.ServiceReference1.Auction[]> getAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getById", ReplyAction="http://tempuri.org/IService1/getByIdResponse")]
        WcfClient.ServiceReference1.Auction getById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getById", ReplyAction="http://tempuri.org/IService1/getByIdResponse")]
        System.Threading.Tasks.Task<WcfClient.ServiceReference1.Auction> getByIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getOfferById", ReplyAction="http://tempuri.org/IService1/getOfferByIdResponse")]
        WcfClient.ServiceReference1.Offer getOfferById(string id, string idOffer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getOfferById", ReplyAction="http://tempuri.org/IService1/getOfferByIdResponse")]
        System.Threading.Tasks.Task<WcfClient.ServiceReference1.Offer> getOfferByIdAsync(string id, string idOffer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateAuction", ReplyAction="http://tempuri.org/IService1/UpdateAuctionResponse")]
        string UpdateAuction(WcfClient.ServiceReference1.Auction autcion, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateAuction", ReplyAction="http://tempuri.org/IService1/UpdateAuctionResponse")]
        System.Threading.Tasks.Task<string> UpdateAuctionAsync(WcfClient.ServiceReference1.Auction autcion, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddAutcion", ReplyAction="http://tempuri.org/IService1/AddAutcionResponse")]
        string AddAutcion(WcfClient.ServiceReference1.Auction auction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddAutcion", ReplyAction="http://tempuri.org/IService1/AddAutcionResponse")]
        System.Threading.Tasks.Task<string> AddAutcionAsync(WcfClient.ServiceReference1.Auction auction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getOffers", ReplyAction="http://tempuri.org/IService1/getOffersResponse")]
        WcfClient.ServiceReference1.Offer[] getOffers(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getOffers", ReplyAction="http://tempuri.org/IService1/getOffersResponse")]
        System.Threading.Tasks.Task<WcfClient.ServiceReference1.Offer[]> getOffersAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addOffer", ReplyAction="http://tempuri.org/IService1/addOfferResponse")]
        string addOffer(WcfClient.ServiceReference1.Offer offer, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addOffer", ReplyAction="http://tempuri.org/IService1/addOfferResponse")]
        System.Threading.Tasks.Task<string> addOfferAsync(WcfClient.ServiceReference1.Offer offer, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/stopAuction", ReplyAction="http://tempuri.org/IService1/stopAuctionResponse")]
        string stopAuction(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/stopAuction", ReplyAction="http://tempuri.org/IService1/stopAuctionResponse")]
        System.Threading.Tasks.Task<string> stopAuctionAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateOffer", ReplyAction="http://tempuri.org/IService1/UpdateOfferResponse")]
        string UpdateOffer(string auctionId, string offerId, WcfClient.ServiceReference1.Offer offer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateOffer", ReplyAction="http://tempuri.org/IService1/UpdateOfferResponse")]
        System.Threading.Tasks.Task<string> UpdateOfferAsync(string auctionId, string offerId, WcfClient.ServiceReference1.Offer offer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteAuction", ReplyAction="http://tempuri.org/IService1/deleteAuctionResponse")]
        string deleteAuction(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteAuction", ReplyAction="http://tempuri.org/IService1/deleteAuctionResponse")]
        System.Threading.Tasks.Task<string> deleteAuctionAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteOffer", ReplyAction="http://tempuri.org/IService1/deleteOfferResponse")]
        string deleteOffer(string idAuction, string idOffer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteOffer", ReplyAction="http://tempuri.org/IService1/deleteOfferResponse")]
        System.Threading.Tasks.Task<string> deleteOfferAsync(string idAuction, string idOffer);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WcfClient.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WcfClient.ServiceReference1.IService1>, WcfClient.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WcfClient.ServiceReference1.Auction[] getAll() {
            return base.Channel.getAll();
        }
        
        public System.Threading.Tasks.Task<WcfClient.ServiceReference1.Auction[]> getAllAsync() {
            return base.Channel.getAllAsync();
        }
        
        public WcfClient.ServiceReference1.Auction getById(string id) {
            return base.Channel.getById(id);
        }
        
        public System.Threading.Tasks.Task<WcfClient.ServiceReference1.Auction> getByIdAsync(string id) {
            return base.Channel.getByIdAsync(id);
        }
        
        public WcfClient.ServiceReference1.Offer getOfferById(string id, string idOffer) {
            return base.Channel.getOfferById(id, idOffer);
        }
        
        public System.Threading.Tasks.Task<WcfClient.ServiceReference1.Offer> getOfferByIdAsync(string id, string idOffer) {
            return base.Channel.getOfferByIdAsync(id, idOffer);
        }
        
        public string UpdateAuction(WcfClient.ServiceReference1.Auction autcion, string id) {
            return base.Channel.UpdateAuction(autcion, id);
        }
        
        public System.Threading.Tasks.Task<string> UpdateAuctionAsync(WcfClient.ServiceReference1.Auction autcion, string id) {
            return base.Channel.UpdateAuctionAsync(autcion, id);
        }
        
        public string AddAutcion(WcfClient.ServiceReference1.Auction auction) {
            return base.Channel.AddAutcion(auction);
        }
        
        public System.Threading.Tasks.Task<string> AddAutcionAsync(WcfClient.ServiceReference1.Auction auction) {
            return base.Channel.AddAutcionAsync(auction);
        }
        
        public WcfClient.ServiceReference1.Offer[] getOffers(string id) {
            return base.Channel.getOffers(id);
        }
        
        public System.Threading.Tasks.Task<WcfClient.ServiceReference1.Offer[]> getOffersAsync(string id) {
            return base.Channel.getOffersAsync(id);
        }
        
        public string addOffer(WcfClient.ServiceReference1.Offer offer, string id) {
            return base.Channel.addOffer(offer, id);
        }
        
        public System.Threading.Tasks.Task<string> addOfferAsync(WcfClient.ServiceReference1.Offer offer, string id) {
            return base.Channel.addOfferAsync(offer, id);
        }
        
        public string stopAuction(string id) {
            return base.Channel.stopAuction(id);
        }
        
        public System.Threading.Tasks.Task<string> stopAuctionAsync(string id) {
            return base.Channel.stopAuctionAsync(id);
        }
        
        public string UpdateOffer(string auctionId, string offerId, WcfClient.ServiceReference1.Offer offer) {
            return base.Channel.UpdateOffer(auctionId, offerId, offer);
        }
        
        public System.Threading.Tasks.Task<string> UpdateOfferAsync(string auctionId, string offerId, WcfClient.ServiceReference1.Offer offer) {
            return base.Channel.UpdateOfferAsync(auctionId, offerId, offer);
        }
        
        public string deleteAuction(string id) {
            return base.Channel.deleteAuction(id);
        }
        
        public System.Threading.Tasks.Task<string> deleteAuctionAsync(string id) {
            return base.Channel.deleteAuctionAsync(id);
        }
        
        public string deleteOffer(string idAuction, string idOffer) {
            return base.Channel.deleteOffer(idAuction, idOffer);
        }
        
        public System.Threading.Tasks.Task<string> deleteOfferAsync(string idAuction, string idOffer) {
            return base.Channel.deleteOfferAsync(idAuction, idOffer);
        }
    }
}
